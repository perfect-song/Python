'''
传值与传址的区别
对于简单的数值，采用传值操作，即在函数内对参数的操作不影响外部的变量
对于复杂变量，采用传址，此时函数的参数和外部变量是同一份内容，任何地方的更改都影响另外变量或者参数的使用

'''
'''
列表函数：
    append():在列表末尾追加 原地操作
    insert(index，data):指定位置插入 原地操作
    pop():把最后一个元素取出来
    remove():删除列表中的值，如果删除的值不在列表中会报错，即删除列表指定值钱使用try....except 或者进行判断   原地操作
    clear():清空列表 原地操作
    reverse():反转列表
    extend():扩展列表，两个列表，把一个直接拼接在后面一个上
    count():查找列表中指定值或者元素的个数
    copy():拷贝，浅拷贝

'''
l = ['new', 'old', 'are', 'you', [1, 3, 5], 3.3]
print(id(l))
l.append(200)
print(l)
print(id(l))
print('*'*20)
l.insert(1,['aaa'])
print(l)
print(id(l))
print('*'*20)
l.pop()
print(l)
print(id(l))

'''
深拷贝与浅拷贝的区别
浅拷贝，只拷贝一层内容


'''
a = [1,2,3,[10,20,30]]
b = a.copy()#浅拷贝
print(id(a))
print(id(b))
print(id(a[3]))
print(id(b[3]))
a[3][2] = 888
print(a)
print(b)
'''
tuple 元组 可以看成一个不可更改的list
创建空元组
t = ()
创建一个值的元组
t = (1,)
创建多个值的元组
t = (1,2,3,4)

使用其他结构创建
l = [1,2,3]
t = tuple(l) 

特性：
    有序
    元组数据可以访问，不能修改
    元组数据可以是任意类型
    总之，list所有特性，除了可修改外，元组都具有，也就意味着
    list具有的一些操作，比如索引，分片，序列相加，相乘，成员资格操作等，一模一样
'''



